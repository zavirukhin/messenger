version: '3.8'

services:
  app:
    container_name: message-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      HOST: '0.0.0.0'
    depends_on:
      - db
    volumes:
      - /app/node_modules
    networks:
      - app-network

  db:
    container_name: postgres-db
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD} 
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - app
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - PROMETHEUS_YML=/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3001:3000"
    env_file:
      - .env
    depends_on:
      - prometheus
      - app
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD} 
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
      
volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
